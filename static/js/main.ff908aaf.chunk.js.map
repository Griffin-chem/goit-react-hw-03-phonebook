{"version":3,"sources":["components/ContactForm/styledContactForm.js","components/ContactForm/ContactForm.js","components/SearchField/styledSearch.js","components/SearchField/SearchField.js","components/ContactItem/styledContactItem.js","components/ContactItem/ContactItem.js","components/ContactList/styledContactList.js","components/ContactList/ContactList.js","styledApp.js","App.js","index.js"],"names":["FormCSS","styled","form","LabelCSS","label","TextInputCSS","input","SubmitCSS","ContactForm","state","name","number","handleInputChange","target","setState","value","addContact","handleNewContact","props","createContact","id","uuidv4","handleSubmit","evt","preventDefault","isNewContact","alert","contacts","find","toLowerCase","this","onSubmit","htmlFor","type","placeholder","onChange","Component","SearchCSS","SearchField","filter","ItemCSS","li","ContactItem","removeContact","onClick","ListCSS","ul","ContactList","onDelete","map","contact","key","AppCSS","div","Caption","h1","SubTitle","h2","filterContacts","array","query","indexOf","App","contactsToShow","addNewContact","NewContact","contactIDToRemove","storedContacts","JSON","parse","localStorage","getItem","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g2BAEA,IAAMA,EAAUC,IAAOC,KAAV,KAIPC,EAAWF,IAAOG,MAAV,KAORC,EAAeJ,IAAOK,MAAV,KAOZC,EAAYN,IAAOK,MAAV,KCTTE,E,4MAYJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAKVC,kBAAoB,YAAiB,IAAdC,EAAa,EAAbA,OACrB,EAAKC,SAAL,eAAgBD,EAAOH,KAAOG,EAAOE,S,EAKvCC,WAAa,YAGXC,EAF6B,EAAKC,MAA1BD,kBACW,EAAKE,kB,EAI1BA,cAAgB,WAAO,IAAD,EACK,EAAKV,MAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,OACd,MAAO,CACLS,GAAIC,cACJX,OACAC,W,EAMJW,aAAe,SAACC,GACdA,EAAIC,iBACoB,KAApB,EAAKf,MAAMC,OACf,EAAKe,eACD,EAAKT,aACLU,MAAM,GAAD,OAAI,EAAKjB,MAAMC,KAAf,uBACT,EAAKI,SAAS,CACZJ,KAAM,GACNC,OAAQ,O,EAMZc,aAAe,WAEb,OADqB,EAAKP,MAAlBS,SACSC,MAAK,qBAAGlB,KAAgBmB,gBAAkB,EAAKpB,MAAMC,KAAKmB,kB,uDAGlE,IAAD,EACeC,KAAKrB,MAAtBC,EADE,EACFA,KAAMC,EADJ,EACIA,OACd,OACA,kBAACX,EAAD,CAAS+B,SAAUD,KAAKR,cACtB,kBAACnB,EAAD,CAAU6B,QAAQ,cAAlB,QACA,kBAAC3B,EAAD,CAAce,GAAG,aAAaV,KAAK,OAAOuB,KAAK,OAAOlB,MAAOL,EAAMwB,YAAY,gBAAgBC,SAAUL,KAAKlB,oBAC9G,kBAACT,EAAD,CAAU6B,QAAQ,gBAAlB,SACA,kBAAC3B,EAAD,CAAce,GAAG,eAAeV,KAAK,SAASuB,KAAK,OAAOlB,MAAOJ,EAAQuB,YAAY,kBAAkBC,SAAUL,KAAKlB,oBACtH,kBAACL,EAAD,CAAW0B,KAAK,SAASlB,MAAM,qB,GArETqB,a,kOCT1B,IAAMC,EAAYpC,IAAOK,MAAV,KAKTH,EAAWF,IAAOG,MAAV,KCARkC,EAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQJ,EAAV,EAAUA,SAAV,OAClB,oCACA,kBAAC,EAAD,CAAUH,QAAQ,gBAAlB,yBACA,kBAACK,EAAD,CAAWjB,GAAG,eAAeV,KAAK,SAASuB,KAAK,OAAOlB,MAAOwB,EAAQJ,SAAUA,M,2HCRlF,IAAMK,EAAUvC,IAAOwC,GAAV,KCGPC,E,4MAQJC,cAAgB,YAGdC,EAFoB,EAAK1B,MAAjB0B,SACkB,EAAK1B,MAAME,K,uDAI5B,IAAD,EACiBU,KAAKZ,MAAtBR,EADA,EACAA,KAAMC,EADN,EACMA,OACd,OACE,kBAAC6B,EAAD,KAAU9B,EAAV,KAAkBC,EAClB,4BAAQiC,QAASd,KAAKa,eAAtB,e,GAlBoBP,a,uFCH1B,IAAMS,EAAU5C,IAAO6C,GAAV,KCKPC,E,uKAcO,IAAD,EACuBjB,KAAKZ,MAA5BS,EADA,EACAA,SAAUqB,EADV,EACUA,SAElB,OACE,kBAACH,EAAD,KACGlB,EAASsB,KAAI,SAACC,GAAD,OAAc,kBAAC,EAAD,eAAaC,IAAKD,EAAQ9B,GAAIwB,QAASI,GAAcE,Y,GAnB/Dd,a,ygBCL1B,IAAMgB,EAASnD,IAAOoD,IAAV,KAONC,EAAUrD,IAAOsD,GAAV,KAQPC,EAAWvD,IAAOwD,GAAV,KCJRC,EAAiB,SAACC,EAAOC,GAC7B,OAAOD,EAAMpB,QAAO,SAAAW,GAAO,OAAiE,IAA7DA,EAAQxC,KAAKmB,cAAcgC,QAAQD,EAAM/B,mBAiE3DiC,E,4MA5DbrD,MAAQ,CACNkB,SAAU,GACVY,OAAQ,I,EAKV3B,kBAAoB,SAACW,GACnB,EAAKT,SAAL,eAAgBS,EAAIV,OAAOH,KAAOa,EAAIV,OAAOE,S,EAK/CgD,eAAiB,WAAO,IAAD,EACQ,EAAKtD,MAA1BkB,EADa,EACbA,SAAUY,EADG,EACHA,OAElB,QADqBA,EAEjBmB,EAAe/B,EAAUY,GACzB,EAAK9B,MAAMkB,U,EAKjBqC,cAAgB,SAACC,GACf,EAAKnD,UAAS,YAAmB,IAAhBa,EAAe,EAAfA,SACf,MAAO,CAACA,SAAS,GAAD,mBAAMA,GAAN,CAAgBsC,S,EAKpCtB,cAAgB,SAACuB,GACf,EAAKpD,UAAS,YAAmB,IAAhBa,EAAe,EAAfA,SACf,MAAO,CAACA,SAAS,YAAKA,EAASY,QAAO,qBAAEnB,KAAe8C,W,kEAKzD,IAAIC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAC9B,OAAnBJ,IAA0BA,EAAiB,IAC/CrC,KAAKhB,SAAS,CAACa,SAAUwC,M,yCAGRK,GACbA,EAAU7C,WAAaG,KAAKrB,MAAMkB,UAAW2C,aAAaG,QAAQ,WAAYL,KAAKM,UAAU5C,KAAKrB,MAAMkB,a,+BAGpG,IAAD,EACoBG,KAAKrB,MAA1B8B,EADC,EACDA,OAAQZ,EADP,EACOA,SAEhB,OACE,kBAACyB,EAAD,KACE,kBAACE,EAAD,kBACA,kBAAC,EAAD,CAAa3B,SAAUA,EAAUV,iBAAkBa,KAAKkC,gBACxD,kBAACR,EAAD,iBACA,kBAAC,EAAD,CAAajB,OAAQA,EAAQJ,SAAUL,KAAKlB,oBAC5C,kBAAC,EAAD,CAAae,SAAUG,KAAKiC,iBAAkBf,SAAUlB,KAAKa,qB,GAzDjDP,aCZlBuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ff908aaf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst FormCSS = styled.form`\r\n  margin-bottom: 10px\r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 20%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px\r\n`;\r\n\r\nconst TextInputCSS = styled.input`\r\n  display: inline-block;\r\n  width: 70%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px\r\n`;\r\n\r\nconst SubmitCSS = styled.input`\r\n  display: block;\r\n  width: auto;\r\n  font-size: 16px;\r\n  padding: 5px\r\n`;\r\n\r\nexport {\r\n  FormCSS,\r\n  LabelCSS,\r\n  TextInputCSS,\r\n  SubmitCSS\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n  FormCSS,\r\n  LabelCSS,\r\n  TextInputCSS,\r\n  SubmitCSS\r\n} from './styledContactForm';\r\n\r\nclass ContactForm extends Component {\r\n  \r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    handleNewContact: PropTypes.func.isRequired\r\n  }\r\n  \r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  // Handle behavior for Input field\r\n\r\n  handleInputChange = ({ target }) => {\r\n    this.setState({[target.name]: target.value});\r\n  };\r\n\r\n  // Fuctions to add new contact to list\r\n\r\n  addContact = () => {\r\n    const { handleNewContact } = this.props;\r\n    const NewContact = this.createContact();\r\n    handleNewContact(NewContact);\r\n  }\r\n\r\n  createContact = () => {\r\n    const { name, number } = this.state;\r\n    return {\r\n      id: uuidv4(),\r\n      name,\r\n      number\r\n    }\r\n  }\r\n\r\n  // Define behavior on form submit\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.name === \"\") {return};\r\n    this.isNewContact()\r\n      ? this.addContact()\r\n      : alert(`${this.state.name} is already exist!`)\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    });\r\n  }\r\n\r\n  // Check if contact is new or existing\r\n\r\n  isNewContact = () => {\r\n    const { contacts } = this.props;\r\n    return !contacts.find(({ name }) => name.toLowerCase() === this.state.name.toLowerCase());\r\n  }\r\n\r\n  render () {\r\n  const { name, number } = this.state;\r\n  return (\r\n  <FormCSS onSubmit={this.handleSubmit}>\r\n    <LabelCSS htmlFor=\"name_input\">Name</LabelCSS>\r\n    <TextInputCSS id=\"name_input\" name=\"name\" type=\"text\" value={name} placeholder=\"Input name...\" onChange={this.handleInputChange}></TextInputCSS>\r\n    <LabelCSS htmlFor=\"number_input\">Phone</LabelCSS>\r\n    <TextInputCSS id=\"number_input\" name=\"number\" type=\"text\" value={number} placeholder=\"Input number...\" onChange={this.handleInputChange}></TextInputCSS>\r\n    <SubmitCSS type=\"submit\" value=\"Add contact\"></SubmitCSS>\r\n  </FormCSS>\r\n  )}\r\n};\r\n\r\nexport {ContactForm};","import styled from 'styled-components';\r\n\r\nconst SearchCSS = styled.input`\r\n  display: inline-block;\r\n  width: 55%; \r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 35%; \r\n`;\r\n\r\nexport { \r\n  SearchCSS,\r\n  LabelCSS\r\n }","import React from 'react';\r\n\r\nimport { \r\n  SearchCSS,\r\n  LabelCSS\r\n } from './styledSearch';\r\n\r\nconst SearchField = ({filter, onChange}) => (\r\n  <>\r\n  <LabelCSS htmlFor=\"search_input\">Find contacts by name</LabelCSS>\r\n  <SearchCSS id=\"search_input\" name=\"filter\" type=\"text\" value={filter} onChange={onChange}></SearchCSS>\r\n  </>\r\n);\r\n\r\nexport {SearchField};","import styled from 'styled-components';\r\n\r\nconst ItemCSS = styled.li`\r\n  display: flex;\r\n  justify-content: space-between\r\n`;\r\n\r\nexport { ItemCSS }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ItemCSS } from './styledContactItem';\r\n\r\nclass ContactItem extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired // function removeContact from App\r\n  }\r\n\r\n  removeContact = () => {\r\n    const { onClick } = this.props;\r\n    const contactIDToRemove = this.props.id;\r\n    onClick(contactIDToRemove);\r\n  }\r\n  \r\n  render () {\r\n    const { name, number } = this.props;\r\n    return (\r\n      <ItemCSS>{name}: {number}\r\n      <button onClick={this.removeContact}>Delete</button>\r\n      </ItemCSS>\r\n    );\r\n  }\r\n}\r\n\r\nexport {ContactItem};","import styled from 'styled-components';\r\n\r\nconst ListCSS = styled.ul`\r\n  width: 60%; \r\n`;\r\n\r\nexport { ListCSS }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ContactItem } from '../ContactItem/ContactItem';\r\n\r\nimport { ListCSS } from './styledContactList';\r\n\r\nclass ContactList extends Component { \r\n\r\n  static propTypes = {\r\n    // function contactsToShow() from App\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n      })).isRequired,\r\n      // function removeContact from App\r\n      onDelete: PropTypes.func.isRequired \r\n  }\r\n\r\n  render () {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ListCSS>\r\n        {contacts.map((contact) => (<ContactItem key={contact.id} onClick={onDelete} {...contact}></ContactItem>))}\r\n      </ListCSS>\r\n    )}\r\n}\r\n\r\nexport {ContactList}","import styled from 'styled-components';\r\n\r\nconst AppCSS = styled.div`\r\n  width: 500px;\r\n  margin: 10px auto;\r\n  box-shadow: 0px 0px 3px 2px #0a0a0a;\r\n  padding: 10px\r\n`;\r\n\r\nconst Caption = styled.h1`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport {\r\n  AppCSS,\r\n  Caption,\r\n  SubTitle\r\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { SearchField } from './components/SearchField/SearchField';\nimport { ContactList } from './components/ContactList/ContactList';\n\nimport { \n  AppCSS,\n  Caption,\n  SubTitle\n } from './styledApp';\n\nconst filterContacts = (array, query) => {\n  return array.filter(contact => contact.name.toLowerCase().indexOf(query.toLowerCase()) !== -1)\n};\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  };\n\n  // Handle behavior for Search field\n\n  handleInputChange = (evt) => {\n    this.setState({[evt.target.name]: evt.target.value});\n  };\n\n  // Define array of contacts to be shown\n\n  contactsToShow = () => {\n    const { contacts, filter } = this.state;\n    const isFiltered = !!filter;\n    return (isFiltered\n      ? filterContacts(contacts, filter)\n      : this.state.contacts)\n  } \n\n  // Function to add new contact - goes to child\n\n  addNewContact = (NewContact) => {\n    this.setState(({ contacts }) => {\n      return {contacts: [...contacts, NewContact]}});\n  }\n  \n  // Function to remove new contact - goes to child\n\n  removeContact = (contactIDToRemove) => {\n    this.setState(({ contacts }) => {\n      return {contacts: [...contacts.filter(({id}) => id !== contactIDToRemove)]}\n    })\n  }\n\n  componentDidMount() {\n    let storedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (storedContacts === null) {storedContacts = []}\n    this.setState({contacts: storedContacts});\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))}\n  }\n\n  render() {\n  const { filter, contacts } = this.state;\n  \n  return (\n    <AppCSS>\n      <Caption>Phonebook</Caption>\n      <ContactForm contacts={contacts} handleNewContact={this.addNewContact}></ContactForm>\n      <SubTitle>Contacts</SubTitle>\n      <SearchField filter={filter} onChange={this.handleInputChange}></SearchField>\n      <ContactList contacts={this.contactsToShow()} onDelete={this.removeContact}></ContactList>\n    </AppCSS>\n  )}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}