{"version":3,"sources":["components/ContactForm/styledContactForm.js","components/ContactForm/ContactForm.js","components/SearchField/styledSearch.js","components/SearchField/SearchField.js","components/ContactItem/styledContactItem.js","components/ContactItem/ContactItem.js","components/ContactList/styledContactList.js","components/ContactList/ContactList.js","styledApp.js","App.js","index.js"],"names":["FormCSS","styled","form","LabelCSS","label","TextInputCSS","input","SubmitCSS","INITIAL_STATE","name","number","ContactForm","state","resetState","setState","handleInputChange","target","value","addContact","handleNewContact","props","createContact","id","uuidv4","handleSubmit","evt","preventDefault","isNaN","alert","isNewContact","contacts","find","toLowerCase","this","onSubmit","htmlFor","type","placeholder","onChange","Component","SearchCSS","SearchField","filter","ItemCSS","li","ContactItem","onDelete","onClick","ListCSS","ul","ContactList","map","key","AppCSS","div","Caption","h1","SubTitle","h2","filterContacts","array","query","contact","indexOf","App","contactsToShow","addNewContact","newContact","removeContact","contactIDToRemove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bf6396.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst FormCSS = styled.form`\r\n  margin-bottom: 10px\r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 20%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px\r\n`;\r\n\r\nconst TextInputCSS = styled.input`\r\n  display: inline-block;\r\n  width: 70%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px\r\n`;\r\n\r\nconst SubmitCSS = styled.input`\r\n  display: block;\r\n  width: auto;\r\n  font-size: 16px;\r\n  padding: 5px\r\n`;\r\n\r\nexport {\r\n  FormCSS,\r\n  LabelCSS,\r\n  TextInputCSS,\r\n  SubmitCSS\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n  FormCSS,\r\n  LabelCSS,\r\n  TextInputCSS,\r\n  SubmitCSS,\r\n} from \"./styledContactForm\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    handleNewContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = INITIAL_STATE;\r\n\r\n  resetState = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  // Handle behavior for Input field\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // Fuctions to add new contact to list\r\n\r\n  addContact = () => {\r\n    const { handleNewContact } = this.props;\r\n    const NewContact = this.createContact();\r\n    handleNewContact(NewContact);\r\n  };\r\n\r\n  createContact = () => {\r\n    const { name, number } = this.state;\r\n    return {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n  };\r\n\r\n  // Define behavior on form submit\r\n\r\n  handleSubmit = (evt) => {\r\n    const { name, number } = this.state;\r\n    evt.preventDefault();\r\n    if (name === \"\") {\r\n      return;\r\n    }\r\n    if (isNaN(number)) {\r\n      alert(\"Please input phone number (only digits)!\");\r\n      return;\r\n    }\r\n    this.isNewContact()\r\n      ? this.addContact()\r\n      : alert(`${name} is already exist!`);\r\n    this.resetState();\r\n  };\r\n\r\n  // Check if contact is new or existing\r\n\r\n  isNewContact = () => {\r\n    const { contacts } = this.props;\r\n    return !contacts.find(\r\n      ({ name }) => name.toLowerCase() === this.state.name.toLowerCase()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <FormCSS onSubmit={this.handleSubmit}>\r\n        <LabelCSS htmlFor=\"name_input\">Name</LabelCSS>\r\n        <TextInputCSS\r\n          id=\"name_input\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          placeholder=\"Input name...\"\r\n          onChange={this.handleInputChange}\r\n        ></TextInputCSS>\r\n        <LabelCSS htmlFor=\"number_input\">Phone</LabelCSS>\r\n        <TextInputCSS\r\n          id=\"number_input\"\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={number}\r\n          placeholder=\"Input number...\"\r\n          onChange={this.handleInputChange}\r\n        ></TextInputCSS>\r\n        <SubmitCSS type=\"submit\" value=\"Add contact\"></SubmitCSS>\r\n      </FormCSS>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ContactForm };\r\n","import styled from 'styled-components';\r\n\r\nconst SearchCSS = styled.input`\r\n  display: inline-block;\r\n  width: 55%; \r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 35%; \r\n`;\r\n\r\nexport { \r\n  SearchCSS,\r\n  LabelCSS\r\n }","import React from 'react';\r\n\r\nimport { \r\n  SearchCSS,\r\n  LabelCSS\r\n } from './styledSearch';\r\n\r\nconst SearchField = ({filter, onChange}) => (\r\n  <>\r\n  <LabelCSS htmlFor=\"search_input\">Find contacts by name</LabelCSS>\r\n  <SearchCSS id=\"search_input\" name=\"filter\" type=\"text\" value={filter} onChange={onChange}></SearchCSS>\r\n  </>\r\n);\r\n\r\nexport {SearchField};","import styled from 'styled-components';\r\n\r\nconst ItemCSS = styled.li`\r\n  display: flex;\r\n  justify-content: space-between\r\n`;\r\n\r\nexport { ItemCSS }","import React from \"react\";\r\n\r\nimport { ItemCSS } from \"./styledContactItem\";\r\n\r\nconst ContactItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <ItemCSS>\r\n      {name}: {number}\r\n      <button onClick={onDelete}>Delete</button>\r\n    </ItemCSS>\r\n  );\r\n};\r\n\r\nexport { ContactItem };\r\n","import styled from 'styled-components';\r\n\r\nconst ListCSS = styled.ul`\r\n  width: 60%; \r\n`;\r\n\r\nexport { ListCSS }","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ContactItem } from \"../ContactItem/ContactItem\";\r\n\r\nimport { ListCSS } from \"./styledContactList\";\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    // function contactsToShow() from App\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    // function removeContact from App\r\n    onDelete: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ListCSS>\r\n        {contacts.map(({ id, ...props }) => (\r\n          <ContactItem key={id} onDelete={() => onDelete(id)} {...props} />\r\n        ))}\r\n      </ListCSS>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ContactList };\r\n","import styled from 'styled-components';\r\n\r\nconst AppCSS = styled.div`\r\n  width: 500px;\r\n  margin: 10px auto;\r\n  box-shadow: 0px 0px 3px 2px #0a0a0a;\r\n  padding: 10px\r\n`;\r\n\r\nconst Caption = styled.h1`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport {\r\n  AppCSS,\r\n  Caption,\r\n  SubTitle\r\n}","import React, { Component } from \"react\";\n\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { SearchField } from \"./components/SearchField/SearchField\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\n\nimport { AppCSS, Caption, SubTitle } from \"./styledApp\";\n\nimport \"./App.css\";\n\nconst filterContacts = (array, query) => {\n  return array.filter(\n    (contact) => contact.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n  );\n};\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  // Handle behavior for Search field\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  // Define array of contacts to be shown\n\n  contactsToShow = () => {\n    const { contacts, filter } = this.state;\n    const isFiltered = !!filter;\n    return isFiltered ? filterContacts(contacts, filter) : this.state.contacts;\n  };\n\n  // Function to add new contact - goes to child\n\n  addNewContact = (newContact) => {\n    this.setState(({ contacts }) => {\n      return { contacts: [...contacts, newContact] };\n    });\n  };\n\n  // Function to remove new contact - goes to child\n\n  removeContact = (contactIDToRemove) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts.filter(({ id }) => id !== contactIDToRemove)],\n      };\n    });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    return (\n      <AppCSS>\n        <Caption>Phonebook</Caption>\n        <ContactForm\n          contacts={contacts}\n          handleNewContact={this.addNewContact}\n        ></ContactForm>\n        <SubTitle>Contacts</SubTitle>\n        <SearchField\n          filter={filter}\n          onChange={this.handleInputChange}\n        ></SearchField>\n        <ContactList\n          contacts={this.contactsToShow()}\n          onDelete={this.removeContact}\n        ></ContactList>\n      </AppCSS>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}